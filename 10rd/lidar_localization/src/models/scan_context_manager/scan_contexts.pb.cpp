// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scan_contexts.proto

#include "lidar_localization/models/scan_context_manager/scan_contexts.pb.hpp"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace scan_context_io {
PROTOBUF_CONSTEXPR ScanContext::ScanContext(
    ::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_.data_)*/ {}, /*decltype(_impl_._cached_size_)*/ {}} {}
struct ScanContextDefaultTypeInternal {
    PROTOBUF_CONSTEXPR ScanContextDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {}
    ~ScanContextDefaultTypeInternal() {}
    union {
        ScanContext _instance;
    };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanContextDefaultTypeInternal _ScanContext_default_instance_;
PROTOBUF_CONSTEXPR ScanContexts::ScanContexts(
    ::_pbi::ConstantInitialized)
    : _impl_{
          /*decltype(_impl_._has_bits_)*/ {}, /*decltype(_impl_._cached_size_)*/ {}, /*decltype(_impl_.data_)*/ {}, /*decltype(_impl_.num_rings_)*/ 0, /*decltype(_impl_.num_sectors_)*/ 0} {}
struct ScanContextsDefaultTypeInternal {
    PROTOBUF_CONSTEXPR ScanContextsDefaultTypeInternal()
        : _instance(::_pbi::ConstantInitialized{}) {}
    ~ScanContextsDefaultTypeInternal() {}
    union {
        ScanContexts _instance;
    };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScanContextsDefaultTypeInternal _ScanContexts_default_instance_;
} // namespace scan_context_io
static ::_pb::Metadata file_level_metadata_scan_5fcontexts_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_scan_5fcontexts_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_scan_5fcontexts_2eproto = nullptr;

const uint32_t TableStruct_scan_5fcontexts_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    ~0u, // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContext, _internal_metadata_),
    ~0u, // no _extensions_
    ~0u, // no _oneof_case_
    ~0u, // no _weak_field_map_
    ~0u, // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContext, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContexts, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContexts, _internal_metadata_),
    ~0u, // no _extensions_
    ~0u, // no _oneof_case_
    ~0u, // no _weak_field_map_
    ~0u, // no _inlined_string_donated_
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContexts, _impl_.num_rings_),
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContexts, _impl_.num_sectors_),
    PROTOBUF_FIELD_OFFSET(::scan_context_io::ScanContexts, _impl_.data_),
    0,
    1,
    ~0u,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    {0, -1, -1, sizeof(::scan_context_io::ScanContext)},
    {7, 16, -1, sizeof(::scan_context_io::ScanContexts)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::scan_context_io::_ScanContext_default_instance_._instance,
    &::scan_context_io::_ScanContexts_default_instance_._instance,
};

const char descriptor_table_protodef_scan_5fcontexts_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
    "\n\023scan_contexts.proto\022\017scan_context_io\"\033"
    "\n\013ScanContext\022\014\n\004data\030\001 \003(\002\"b\n\014ScanConte"
    "xts\022\021\n\tnum_rings\030\001 \002(\005\022\023\n\013num_sectors\030\002 "
    "\002(\005\022*\n\004data\030\003 \003(\0132\034.scan_context_io.Scan"
    "Context";
static ::_pbi::once_flag descriptor_table_scan_5fcontexts_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_scan_5fcontexts_2eproto = {
    false,
    false,
    167,
    descriptor_table_protodef_scan_5fcontexts_2eproto,
    "scan_contexts.proto",
    &descriptor_table_scan_5fcontexts_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_scan_5fcontexts_2eproto::offsets,
    file_level_metadata_scan_5fcontexts_2eproto,
    file_level_enum_descriptors_scan_5fcontexts_2eproto,
    file_level_service_descriptors_scan_5fcontexts_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_scan_5fcontexts_2eproto_getter() {
    return &descriptor_table_scan_5fcontexts_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_scan_5fcontexts_2eproto(&descriptor_table_scan_5fcontexts_2eproto);
namespace scan_context_io {

// ===================================================================

class ScanContext::_Internal {
public:
};

ScanContext::ScanContext(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
    SharedCtor(arena, is_message_owned);
    // @@protoc_insertion_point(arena_constructor:scan_context_io.ScanContext)
}
ScanContext::ScanContext(const ScanContext& from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
    ScanContext* const _this = this;
    (void)_this;
    new (&_impl_) Impl_{
        decltype(_impl_.data_){from._impl_.data_}, /*decltype(_impl_._cached_size_)*/ {}};

    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:scan_context_io.ScanContext)
}

inline void ScanContext::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
    (void)arena;
    (void)is_message_owned;
    new (&_impl_) Impl_{
        decltype(_impl_.data_){arena}, /*decltype(_impl_._cached_size_)*/ {}};
}

ScanContext::~ScanContext() {
    // @@protoc_insertion_point(destructor:scan_context_io.ScanContext)
    if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
        (void)arena;
        return;
    }
    SharedDtor();
}

inline void ScanContext::SharedDtor() {
    GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    _impl_.data_.~RepeatedField();
}

void ScanContext::SetCachedSize(int size) const {
    _impl_._cached_size_.Set(size);
}

void ScanContext::Clear() {
    // @@protoc_insertion_point(message_clear_start:scan_context_io.ScanContext)
    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.data_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanContext::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) \
    if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
    while (!ctx->Done(&ptr)) {
        uint32_t tag;
        ptr = ::_pbi::ReadTag(ptr, &tag);
        switch (tag >> 3) {
            // repeated float data = 1;
            case 1:
                if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
                    ptr -= 1;
                    do {
                        ptr += 1;
                        _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
                        ptr += sizeof(float);
                        if (!ctx->DataAvailable(ptr)) break;
                    } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<13>(ptr));
                } else if (static_cast<uint8_t>(tag) == 10) {
                    ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_data(), ptr, ctx);
                    CHK_(ptr);
                } else
                    goto handle_unusual;
                continue;
            default:
                goto handle_unusual;
        } // switch
    handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
            CHK_(ptr);
            ctx->SetLastTag(tag);
            goto message_done;
        }
        ptr = UnknownFieldParse(
            tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
    } // while
message_done:
    return ptr;
failure:
    ptr = nullptr;
    goto message_done;
#undef CHK_
}

uint8_t* ScanContext::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.ScanContext)
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated float data = 1;
    for (int i = 0, n = this->_internal_data_size(); i < n; i++) {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_data(i), target);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.ScanContext)
    return target;
}

size_t ScanContext::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:scan_context_io.ScanContext)
    size_t total_size = 0;

    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // repeated float data = 1;
    {
        unsigned int count = static_cast<unsigned int>(this->_internal_data_size());
        size_t data_size = 4UL * count;
        total_size += 1 *
                      ::_pbi::FromIntSize(this->_internal_data_size());
        total_size += data_size;
    }

    return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScanContext::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScanContext::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* ScanContext::GetClassData() const { return &_class_data_; }

void ScanContext::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
    auto* const _this = static_cast<ScanContext*>(&to_msg);
    auto& from = static_cast<const ScanContext&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.ScanContext)
    GOOGLE_DCHECK_NE(&from, _this);
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_impl_.data_.MergeFrom(from._impl_.data_);
    _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScanContext::CopyFrom(const ScanContext& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.ScanContext)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool ScanContext::IsInitialized() const {
    return true;
}

void ScanContext::InternalSwap(ScanContext* other) {
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanContext::GetMetadata() const {
    return ::_pbi::AssignDescriptors(
        &descriptor_table_scan_5fcontexts_2eproto_getter, &descriptor_table_scan_5fcontexts_2eproto_once,
        file_level_metadata_scan_5fcontexts_2eproto[0]);
}

// ===================================================================

class ScanContexts::_Internal {
public:
    using HasBits = decltype(std::declval<ScanContexts>()._impl_._has_bits_);
    static void set_has_num_rings(HasBits* has_bits) {
        (*has_bits)[0] |= 1u;
    }
    static void set_has_num_sectors(HasBits* has_bits) {
        (*has_bits)[0] |= 2u;
    }
    static bool MissingRequiredFields(const HasBits& has_bits) {
        return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
    }
};

ScanContexts::ScanContexts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                           bool is_message_owned)
    : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
    SharedCtor(arena, is_message_owned);
    // @@protoc_insertion_point(arena_constructor:scan_context_io.ScanContexts)
}
ScanContexts::ScanContexts(const ScanContexts& from)
    : ::PROTOBUF_NAMESPACE_ID::Message() {
    ScanContexts* const _this = this;
    (void)_this;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){from._impl_._has_bits_}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.data_){from._impl_.data_}, decltype(_impl_.num_rings_){}, decltype(_impl_.num_sectors_){}};

    _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
    ::memcpy(&_impl_.num_rings_, &from._impl_.num_rings_,
             static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_sectors_) -
                                 reinterpret_cast<char*>(&_impl_.num_rings_)) +
                 sizeof(_impl_.num_sectors_));
    // @@protoc_insertion_point(copy_constructor:scan_context_io.ScanContexts)
}

inline void ScanContexts::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
    (void)arena;
    (void)is_message_owned;
    new (&_impl_) Impl_{
        decltype(_impl_._has_bits_){}, /*decltype(_impl_._cached_size_)*/ {}, decltype(_impl_.data_){arena}, decltype(_impl_.num_rings_){0}, decltype(_impl_.num_sectors_){0}};
}

ScanContexts::~ScanContexts() {
    // @@protoc_insertion_point(destructor:scan_context_io.ScanContexts)
    if (auto* arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
        (void)arena;
        return;
    }
    SharedDtor();
}

inline void ScanContexts::SharedDtor() {
    GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
    _impl_.data_.~RepeatedPtrField();
}

void ScanContexts::SetCachedSize(int size) const {
    _impl_._cached_size_.Set(size);
}

void ScanContexts::Clear() {
    // @@protoc_insertion_point(message_clear_start:scan_context_io.ScanContexts)
    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    _impl_.data_.Clear();
    cached_has_bits = _impl_._has_bits_[0];
    if (cached_has_bits & 0x00000003u) {
        ::memset(&_impl_.num_rings_, 0, static_cast<size_t>(reinterpret_cast<char*>(&_impl_.num_sectors_) - reinterpret_cast<char*>(&_impl_.num_rings_)) + sizeof(_impl_.num_sectors_));
    }
    _impl_._has_bits_.Clear();
    _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScanContexts::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) \
    if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
    _Internal::HasBits has_bits{};
    while (!ctx->Done(&ptr)) {
        uint32_t tag;
        ptr = ::_pbi::ReadTag(ptr, &tag);
        switch (tag >> 3) {
            // required int32 num_rings = 1;
            case 1:
                if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
                    _Internal::set_has_num_rings(&has_bits);
                    _impl_.num_rings_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                    CHK_(ptr);
                } else
                    goto handle_unusual;
                continue;
            // required int32 num_sectors = 2;
            case 2:
                if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
                    _Internal::set_has_num_sectors(&has_bits);
                    _impl_.num_sectors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
                    CHK_(ptr);
                } else
                    goto handle_unusual;
                continue;
            // repeated .scan_context_io.ScanContext data = 3;
            case 3:
                if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
                    ptr -= 1;
                    do {
                        ptr += 1;
                        ptr = ctx->ParseMessage(_internal_add_data(), ptr);
                        CHK_(ptr);
                        if (!ctx->DataAvailable(ptr)) break;
                    } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
                } else
                    goto handle_unusual;
                continue;
            default:
                goto handle_unusual;
        } // switch
    handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
            CHK_(ptr);
            ctx->SetLastTag(tag);
            goto message_done;
        }
        ptr = UnknownFieldParse(
            tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
    } // while
message_done:
    _impl_._has_bits_.Or(has_bits);
    return ptr;
failure:
    ptr = nullptr;
    goto message_done;
#undef CHK_
}

uint8_t* ScanContexts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
    // @@protoc_insertion_point(serialize_to_array_start:scan_context_io.ScanContexts)
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = _impl_._has_bits_[0];
    // required int32 num_rings = 1;
    if (cached_has_bits & 0x00000001u) {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_num_rings(), target);
    }

    // required int32 num_sectors = 2;
    if (cached_has_bits & 0x00000002u) {
        target = stream->EnsureSpace(target);
        target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_num_sectors(), target);
    }

    // repeated .scan_context_io.ScanContext data = 3;
    for (unsigned i = 0,
                  n = static_cast<unsigned>(this->_internal_data_size());
         i < n; i++) {
        const auto& repfield = this->_internal_data(i);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
            InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
    }

    if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
        target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
    }
    // @@protoc_insertion_point(serialize_to_array_end:scan_context_io.ScanContexts)
    return target;
}

size_t ScanContexts::RequiredFieldsByteSizeFallback() const {
    // @@protoc_insertion_point(required_fields_byte_size_fallback_start:scan_context_io.ScanContexts)
    size_t total_size = 0;

    if (_internal_has_num_rings()) {
        // required int32 num_rings = 1;
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_rings());
    }

    if (_internal_has_num_sectors()) {
        // required int32 num_sectors = 2;
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_sectors());
    }

    return total_size;
}
size_t ScanContexts::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:scan_context_io.ScanContexts)
    size_t total_size = 0;

    if (((_impl_._has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) { // All required fields are present.
        // required int32 num_rings = 1;
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_rings());

        // required int32 num_sectors = 2;
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_num_sectors());

    } else {
        total_size += RequiredFieldsByteSizeFallback();
    }
    uint32_t cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    // repeated .scan_context_io.ScanContext data = 3;
    total_size += 1UL * this->_internal_data_size();
    for (const auto& msg : this->_impl_.data_) {
        total_size +=
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
    }

    return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ScanContexts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ScanContexts::MergeImpl};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* ScanContexts::GetClassData() const { return &_class_data_; }

void ScanContexts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
    auto* const _this = static_cast<ScanContexts*>(&to_msg);
    auto& from = static_cast<const ScanContexts&>(from_msg);
    // @@protoc_insertion_point(class_specific_merge_from_start:scan_context_io.ScanContexts)
    GOOGLE_DCHECK_NE(&from, _this);
    uint32_t cached_has_bits = 0;
    (void)cached_has_bits;

    _this->_impl_.data_.MergeFrom(from._impl_.data_);
    cached_has_bits = from._impl_._has_bits_[0];
    if (cached_has_bits & 0x00000003u) {
        if (cached_has_bits & 0x00000001u) {
            _this->_impl_.num_rings_ = from._impl_.num_rings_;
        }
        if (cached_has_bits & 0x00000002u) {
            _this->_impl_.num_sectors_ = from._impl_.num_sectors_;
        }
        _this->_impl_._has_bits_[0] |= cached_has_bits;
    }
    _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ScanContexts::CopyFrom(const ScanContexts& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:scan_context_io.ScanContexts)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool ScanContexts::IsInitialized() const {
    if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
    return true;
}

void ScanContexts::InternalSwap(ScanContexts* other) {
    using std::swap;
    _internal_metadata_.InternalSwap(&other->_internal_metadata_);
    swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
    _impl_.data_.InternalSwap(&other->_impl_.data_);
    ::PROTOBUF_NAMESPACE_ID::internal::memswap<
        PROTOBUF_FIELD_OFFSET(ScanContexts, _impl_.num_sectors_) + sizeof(ScanContexts::_impl_.num_sectors_) - PROTOBUF_FIELD_OFFSET(ScanContexts, _impl_.num_rings_)>(
        reinterpret_cast<char*>(&_impl_.num_rings_),
        reinterpret_cast<char*>(&other->_impl_.num_rings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScanContexts::GetMetadata() const {
    return ::_pbi::AssignDescriptors(
        &descriptor_table_scan_5fcontexts_2eproto_getter, &descriptor_table_scan_5fcontexts_2eproto_once,
        file_level_metadata_scan_5fcontexts_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
} // namespace scan_context_io
PROTOBUF_NAMESPACE_OPEN
template <>
PROTOBUF_NOINLINE ::scan_context_io::ScanContext*
Arena::CreateMaybeMessage<::scan_context_io::ScanContext>(Arena* arena) {
    return Arena::CreateMessageInternal<::scan_context_io::ScanContext>(arena);
}
template <>
PROTOBUF_NOINLINE ::scan_context_io::ScanContexts*
Arena::CreateMaybeMessage<::scan_context_io::ScanContexts>(Arena* arena) {
    return Arena::CreateMessageInternal<::scan_context_io::ScanContexts>(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
